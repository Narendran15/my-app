node{
   stage('SCM Checkout'){
     git 'https://github.com/Narendran15/my-app.git'
   } 
   stage('Compile-Package'){

     def mvnHome =  tool name: 'maven3', type: 'maven'   
     sh "${mvnHome}/bin/mvn clean package"
	 sh 'mv target/myweb*.war target/newapp.war'
   }
   stage('SonarQube Analysis') {
	        def mvnHome =  tool name: 'maven3', type: 'maven'
	        withSonarQubeEnv('sonar') { 
	          sh "${mvnHome}/bin/mvn sonar:sonar"
	        }
   }
   stage('Build Docker Imager'){
     sh 'docker build -t hopeuser/myweb:0.0.5 .'
   }
   stage('Docker Image Push'){
     withCredentials([string(credentialsId: 'dockerPass', variable: 'dockerPassword')]) {
     sh "docker login -u hopeuser -p ${dockerPassword}"
    }
     sh 'docker push hopeuser/myweb:0.0.5'
   }
   stage('Nexus Image Push'){
   sh "docker login -u admin -p admin123 13.127.153.148:8083"
   sh "docker tag hopeuser/myweb:0.0.5 13.127.153.148:8083/testsqshs:1.0.0"
   sh 'docker push 13.127.153.148:8083/testsqshs:1.0.0'
   }
   stage('Remove Previous Container'){
	    try{
	    	sh 'docker rm -f workingdemo'
	    }catch(error){
		    //  do nothing if there is an exception
	    }
   }
   stage('Docker deployment'){
     sh 'docker run -d -p 8090:8080 --name workingdemo hopeuser/myweb:0.0.5' 
   }
}
